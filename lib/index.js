// Generated by CoffeeScript 1.7.1
(function() {
  var nullCallback, onCallbackApply, onCallbackDo, onErr, onErrCall, setGlobal,
    __slice = [].slice;

  onErrCall = function(next) {
    return function(callback) {
      return onErr(next, callback);
    };
  };

  onErr = function(next, callback) {
    return function() {
      var err;
      err = arguments[0];
      if (err) {
        return next(err);
      }
      return callback.apply(this, arguments);
    };
  };

  onCallbackApply = function() {
    var args, callback, _i;
    args = 2 <= arguments.length ? __slice.call(arguments, 0, _i = arguments.length - 1) : (_i = 0, []), callback = arguments[_i++];
    args.unshift(null);
    return function() {
      var err;
      err = arguments[0];
      if (err) {
        return callback(err);
      }
      return callback.apply(this, args);
    };
  };

  onCallbackDo = function(callback) {
    return function(err) {
      if (err) {
        return callback(err);
      }
      return callback();
    };
  };

  nullCallback = function(err) {
    if (err) {
      return console.log("" + err);
    }
  };

  setGlobal = function() {
    GLOBAL.onErrCall = onErrCall;
    GLOBAL.onErr = onErr;
    GLOBAL.onCallbackApply = onCallbackApply;
    GLOBAL.onCallbackDo = onCallbackDo;
    return GLOBAL.nullCallback = nullCallback;
  };

  module.exports = {
    onErrCall: onErrCall,
    onErr: onErr,
    onCallbackApply: onCallbackApply,
    onCallbackDo: onCallbackDo,
    nullCallback: nullCallback,
    setGlobal: setGlobal
  };

}).call(this);
